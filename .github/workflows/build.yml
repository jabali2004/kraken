name: build

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build_backend:
    name: build backend
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    services:
      postgres:
        image: postgres:14-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2.5.1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Add .env file
        run: cd backend/ && cp .env.example .env
      - name: Install project dependencies
        run: cd backend/ && npm install
      - name: Generate prisma schema
        run: cd backend/ && npx prisma generate
      - name: Run linter
        run: cd backend/ && npm run lint
      - name: Run tests
        run: cd backend/ && npm run test
      - name: Build backend
        run: cd backend/ && npm run build
  build_frontend:
    name: build frontend
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2.5.1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install project dependencies
        run: cd frontend/ && npm install
      - name: Generate api client
        run: cd frontend/ && npm run openapi:generate
      - name: Build frontend
        run: cd frontend/ && npm run build
